#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        format_rider: format_rider {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(L))>;
            label = "FORMAT_RIDER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp TILDE  &kp Q  &kp W  &kp E         &kp R      &kp T                                                    &kp Y  &kp U     &kp I          &kp O    &kp P     &kp BSLH
&kp TAB    &kp A  &kp S  &kp D         &kp F      &kp G                                                    &kp H  &kp J     &kp K          &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C         &kp V      &kp B  &kp LC(C)  &kp LC(V)       &none       &none      &kp N  &kp M     &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_CONTROL
                         &kp LEFT_ALT  &kp LMETA  &mo 2  &kp SPACE  &kp LEFT_SHIFT  &kp ESCAPE  &kp ENTER  &mo 1  &kp BSPC  &kp RIGHT_ALT
            >;
        };

        nav_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&none  &none  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none                                     &none  &kp HOME        &none           &none         &kp END    &none
&none  &none  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0                              &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none
&none  &none  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none         &none  &none  &none  &none  &none  &none           &none           &none         &none      &none
                            &none         &none         &none         &none  &none  &none  &none  &none  &none           &none
            >;
        };

        sym_layer {
            bindings = <
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                              &kp CARET       &kp AMPERSAND  &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &none            &none        &none     &none       &none                                    &kp MINUS       &kp EQUAL      &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp BACKSLASH          &kp GRAVE
&none  &none            &none        &none     &none       &none        &none  &none  &none  &none  &kp UNDERSCORE  &kp PLUS       &kp LEFT_BRACE    &kp RIGHT_BRACE       &kp PIPE               &kp TILDE
                                     &none     &none       &none        &none  &none  &none  &none  &none           &none          &none
            >;
        };

        fn {
            bindings = <
&none  &none         &none         &none         &none   &none                                      &none   &none    &none    &none    &none  &none
&none  &kp F1        &kp F2        &kp F3        &kp F4  &kp F5                                     &kp F6  &kp F7   &kp F8   &kp F9   &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none   &format_rider  &none  &none  &none  &none  &none   &kp F10  &kp F11  &kp F12  &none  &none
                                   &none         &none   &none          &none  &none  &none  &none  &none   &none    &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fn_condition {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
